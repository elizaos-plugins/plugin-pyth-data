import d from'chalk';import fe from'cli-table3';import Ze from'ora';import {elizaLogger}from'@elizaos/core';import {HermesClient}from'@pythnetwork/hermes-client';import {z}from'zod';import Fe from'ajv';var w=class extends Error{constructor(i,a,t="MEDIUM",s,n){super(a);this.code=i;this.message=a;this.severity=t;this.details=s;this.originalError=n;this.timestamp=Date.now(),Object.setPrototypeOf(this,new.target.prototype);}timestamp;name="PythError";toJSON(){return {name:this.name,code:this.code,message:this.message,severity:this.severity,timestamp:this.timestamp,details:this.details,stack:this.stack,originalError:this.originalError?{name:this.originalError.name,message:this.originalError.message,stack:this.originalError.stack}:void 0}}};var o=class r extends w{name="DataError";constructor(e,i,a="MEDIUM",t,s){super(e,i,a,t,s),Object.setPrototypeOf(this,new.target.prototype);}static invalidSubscription(e,i){return new r("DATA_INVALID_SUBSCRIPTION","Invalid subscription parameters","MEDIUM",{subscription:e,reason:i})}static subscriptionLimitExceeded(e,i){return new r("DATA_SUBSCRIPTION_LIMIT",`Subscription limit exceeded (${e}/${i})`,"HIGH",{currentCount:e,maxLimit:i})}static validationFailed(e,i){return new r("DATA_VALIDATION_FAILED","Data validation failed","MEDIUM",{data:e,validationErrors:i})}static sequenceError(e,i,a){return new r("DATA_SEQUENCE_ERROR",`Message sequence error: expected ${e}, received ${i}`,"MEDIUM",{expected:e,received:i,...a})}static transformError(e,i,a){return new r("DATA_TRANSFORM_ERROR","Failed to transform data","MEDIUM",{data:e,targetFormat:i},a)}static schemaError(e,i,a){return new r("DATA_SCHEMA_ERROR","Data does not match schema","HIGH",{data:e,schema:i},a)}static stalePriceError(e,i,a){return new r("DATA_STALE_PRICE",`Price data for ${e} is stale`,"HIGH",{symbol:e,lastUpdateTime:i,maxAge:a,currentTime:Date.now()})}static chainError(e,i,a){return new r("DATA_CHAIN_ERROR",`Chain-specific error on ${e} during ${i}`,"HIGH",{chain:e,operation:i},a)}};var v="mainnet",Ie={mainnet:{hermes:process.env.PYTH_MAINNET_HERMES_URL||"https://hermes.pyth.network",wss:process.env.PYTH_MAINNET_WSS_URL||"wss://hermes.pyth.network/ws",pythnet:process.env.PYTH_MAINNET_PYTHNET_URL||"https://pythnet.rpcpool.com",contractRegistry:process.env.PYTH_MAINNET_CONTRACT_REGISTRY||"https://pyth.network/developers/price-feed-ids",programKey:process.env.PYTH_MAINNET_PROGRAM_KEY||"FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"},testnet:{hermes:process.env.PYTH_TESTNET_HERMES_URL||"https://hermes.pyth.network",wss:process.env.PYTH_TESTNET_WSS_URL||"wss://hermes.pyth.network/ws",pythnet:process.env.PYTH_TESTNET_PYTHNET_URL||"https://pythnet.rpcpool.com",contractRegistry:process.env.PYTH_TESTNET_CONTRACT_REGISTRY||"https://pyth.network/developers/price-feed-ids#testnet",programKey:process.env.PYTH_TESTNET_PROGRAM_KEY||"FsJ3A3u2vn5cTVofAjvy6y5kwABJAqYWpe4975bi2epH"}},Re=z.object({PYTH_NETWORK_ENV:z.enum(["mainnet","testnet"]).default("mainnet"),PYTH_MAX_RETRIES:z.string().transform(Number).default("3"),PYTH_RETRY_DELAY:z.string().transform(Number).default("1000"),PYTH_TIMEOUT:z.string().transform(Number).default("5000"),PYTH_GRANULAR_LOG:z.boolean().default(true),PYTH_LOG_LEVEL:z.enum(["error","warn","info","debug"]).default("info"),RUNTIME_CHECK_MODE:z.boolean().default(false),PYTH_ENABLE_PRICE_STREAMING:z.boolean().default(true),PYTH_MAX_PRICE_STREAMS:z.string().transform(Number).default("10"),PYTH_TEST_ID01:z.string().default("0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"),PYTH_TEST_ID02:z.string().default("0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace")});function D(r=v||process.env.PYTH_NETWORK_ENV){return v=r||"mainnet",{PYTH_NETWORK_ENV:r||"mainnet",PYTH_MAX_RETRIES:Number(process.env.PYTH_MAX_RETRIES||"3"),PYTH_RETRY_DELAY:Number(process.env.PYTH_RETRY_DELAY||"1000"),PYTH_TIMEOUT:Number(process.env.PYTH_TIMEOUT||"5000"),PYTH_GRANULAR_LOG:process.env.PYTH_GRANULAR_LOG==="true"||false,PYTH_LOG_LEVEL:process.env.PYTH_LOG_LEVEL||"info",RUNTIME_CHECK_MODE:process.env.RUNTIME_CHECK_MODE==="true"||false,PYTH_ENABLE_PRICE_STREAMING:process.env.PYTH_ENABLE_PRICE_STREAMING==="true"||true,PYTH_MAX_PRICE_STREAMS:Number(process.env.PYTH_MAX_PRICE_STREAMS||"10"),PYTH_TEST_ID01:process.env.PYTH_TEST_ID01||"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",PYTH_TEST_ID02:process.env.PYTH_TEST_ID02||"0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace"}}async function N(r){try{let e=D(r.getSetting("PYTH_NETWORK_ENV")??void 0),i={PYTH_NETWORK_ENV:process.env.PYTH_NETWORK_ENV||r.getSetting("PYTH_NETWORK_ENV")||e.PYTH_NETWORK_ENV,PYTH_MAX_RETRIES:process.env.PYTH_MAX_RETRIES||r.getSetting("PYTH_MAX_RETRIES")||e.PYTH_MAX_RETRIES.toString(),PYTH_RETRY_DELAY:process.env.PYTH_RETRY_DELAY||r.getSetting("PYTH_RETRY_DELAY")||e.PYTH_RETRY_DELAY.toString(),PYTH_GRANULAR_LOG:process.env.PYTH_GRANULAR_LOG==="true"||!1,PYTH_LOG_LEVEL:process.env.PYTH_LOG_LEVEL||r.getSetting("PYTH_LOG_LEVEL")||e.PYTH_LOG_LEVEL,RUNTIME_CHECK_MODE:process.env.RUNTIME_CHECK_MODE==="true"||!1,PYTH_ENABLE_PRICE_STREAMING:process.env.PYTH_ENABLE_PRICE_STREAMING==="true"||!0,PYTH_MAX_PRICE_STREAMS:process.env.PYTH_MAX_PRICE_STREAMS||r.getSetting("PYTH_MAX_PRICE_STREAMS")||e.PYTH_MAX_PRICE_STREAMS.toString(),PYTH_TEST_ID01:process.env.PYTH_TEST_ID01||e.PYTH_TEST_ID01,PYTH_TEST_ID02:process.env.PYTH_TEST_ID02||e.PYTH_TEST_ID02};return Re.parse(i)}catch(e){let i=e instanceof Error?e.message:String(e);throw new Error(`Failed to validate Pyth configuration: ${i}`)}}var O=(r=v)=>Ie[r];var be=z.object({asset_type:z.string(),base:z.string(),description:z.string(),display_symbol:z.string(),quote_currency:z.string(),schedule:z.string(),symbol:z.string(),generic_symbol:z.string().optional(),cms_symbol:z.string().optional(),country:z.string().optional(),cqs_symbol:z.string().optional(),nasdaq_symbol:z.string().optional(),contract_id:z.string().optional()}),ge=z.object({text:z.string(),query:z.string().optional(),filter:z.string().optional(),success:z.boolean().optional(),data:z.object({feeds:z.array(z.object({id:z.string(),attributes:be})),count:z.number(),responseType:z.string(),isArray:z.boolean(),error:z.string().optional()}).optional()});async function Z(r){try{let e=await ge.parseAsync(r);return elizaLogger.debug("Price feeds validation passed",{result:e}),!0}catch(e){throw elizaLogger.error("Price feeds validation failed",{error:e}),new o("DATA_VALIDATION_FAILED","Price feeds validation failed","HIGH",{error:e})}}var Ne=D(),he=Ne.PYTH_GRANULAR_LOG,f=(r,e)=>{he&&(elizaLogger.info(`[PriceFeeds] ${r}`,e),console.log(`[PriceFeeds] ${r}`,e?JSON.stringify(e,null,2):""));},Pe={name:"GET_PRICE_FEEDS",similes:["FETCH_PRICE_FEEDS","LIST_PRICE_FEEDS","QUERY_PRICE_FEEDS"],description:"Retrieve price feeds from Pyth Network matching specific criteria",examples:[[{user:"user",content:{text:"Get all available price feeds from Pyth Network",query:"BTC",filter:"USD"}},{user:"assistant",content:{text:"Price feeds matching query BTC and filter USD",success:true,query:"BTC",filter:"USD",data:{feeds:[{id:"f9c0172ba10dfa4d19088d94f5bf61d3b54d5bd7483a322a982e1373ee8ea31b",attributes:{asset_type:"Crypto",base:"BTC",description:"BITCOIN / US DOLLAR",display_symbol:"BTC/USD",generic_symbol:"BTCUSD",quote_currency:"USD",schedule:"America/New_York;O,O,O,O,O,O,O;",symbol:"Crypto.BTC/USD"}}]}}}]],async validate(r,e){var i,a;if(((i=e.content)==null?void 0:i.type)!=="GET_PRICE_FEEDS")return  true;f("Starting validation",{messageId:e.id,content:e.content});try{let t=e.content;f("Validating content structure",{content:t});try{await Z(t),f("Schema validation passed");}catch(n){throw f("Schema validation error",{error:n}),n instanceof o?(elizaLogger.error("Schema validation failed",{errors:(a=n.details)==null?void 0:a.errors}),n):new o("DATA_VALIDATION_FAILED","Schema validation failed","HIGH",{error:n})}let s=await N(r);if(f("Pyth config validation",{config:s}),!s)throw new o("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");if(t.query&&typeof t.query!="string")throw f("Invalid query type",{query:t.query}),new o("DATA_VALIDATION_FAILED","Query must be a string","HIGH");if(t.filter&&typeof t.filter!="string")throw f("Invalid filter type",{filter:t.filter}),new o("DATA_VALIDATION_FAILED","Filter must be a string","HIGH");return f("Validation successful",{query:t.query,filter:t.filter}),!0}catch(t){throw f("Validation failed",{error:t instanceof Error?{message:t.message,stack:t.stack,name:t.name}:String(t)}),t instanceof o?t:new o("DATA_VALIDATION_FAILED","Invalid content format","HIGH",{content:e.content})}},async handler(r,e,i,a={},t){f("Starting handler execution",{messageId:e.id,hasCallback:!!t});try{let s=e.content,{query:n,filter:c}=s;f("Processing request",{query:n,filter:c});let p=await N(r);f("Got Pyth config",{networkEnv:p.PYTH_NETWORK_ENV});let I=O(p.PYTH_NETWORK_ENV);f("Network config",{networkConfig:I});let A=new HermesClient(I.hermes);f("Initialized HermesClient",{endpoint:I.hermes});let b={query:n,filter:c};f("Fetching price feeds with options",{options:b,hermesEndpoint:I.hermes,clientType:typeof A.getPriceFeeds});let T=await A.getPriceFeeds(b);f("Retrieved price feeds",{responseType:typeof T,isArray:Array.isArray(T),count:(T==null?void 0:T.length)||0,sample:(T==null?void 0:T.slice(0,3))||[]});let y=T.map(_=>{var u,C,L,k,V,W,$,B,K,q,j,X,z;return {id:_.id,attributes:{asset_type:((u=_.attributes)==null?void 0:u.asset_type)||"Unknown",base:((C=_.attributes)==null?void 0:C.base)||"Unknown",description:((L=_.attributes)==null?void 0:L.description)||"Unknown",display_symbol:((k=_.attributes)==null?void 0:k.display_symbol)||"Unknown",quote_currency:((V=_.attributes)==null?void 0:V.quote_currency)||"Unknown",schedule:((W=_.attributes)==null?void 0:W.schedule)||"",symbol:(($=_.attributes)==null?void 0:$.symbol)||"Unknown",generic_symbol:(B=_.attributes)==null?void 0:B.generic_symbol,cms_symbol:(K=_.attributes)==null?void 0:K.cms_symbol,country:(q=_.attributes)==null?void 0:q.country,cqs_symbol:(j=_.attributes)==null?void 0:j.cqs_symbol,nasdaq_symbol:(X=_.attributes)==null?void 0:X.nasdaq_symbol,contract_id:(z=_.attributes)==null?void 0:z.contract_id}}}),l={text:`Retrieved ${T.length} price feeds:
${y.map(_=>`- ${_.attributes.description} (${_.attributes.display_symbol})
  Type: ${_.attributes.asset_type}
  Base: ${_.attributes.base}
  Quote: ${_.attributes.quote_currency}
  Schedule: ${_.attributes.schedule}
  ID: ${_.id}`).join(`
`)}
${n?`
Matching query: "${n}"`:""}${c?`
With filter: "${c}"`:""}`,query:n,filter:c,success:!0,data:{feeds:y,count:T.length,responseType:"object",isArray:!0}};return f("Prepared callback content",{feedCount:y.length,firstFeed:y[0]}),t&&(f("Executing callback"),await t(l),f("Callback completed")),!0}catch(s){let n=s instanceof Error?s.message:"Unknown error occurred",c=s instanceof Error?s.stack:void 0;f("Error retrieving price feeds",{error:n,stack:c});let p={text:`Failed to retrieve price feeds: ${n}
Error details: ${c||"No stack trace available"}`,success:false,data:{feeds:[],error:n,count:0,responseType:"object",isArray:true}};throw t&&await t(p),new o("PRICE_FEEDS_FETCH_FAILED",n,"HIGH")}}},te=Pe;var De=z.object({encoding:z.enum(["hex","base64"]).optional(),parsed:z.boolean().optional(),allowUnordered:z.boolean().optional(),benchmarksOnly:z.boolean().optional()}),ye=z.object({slot:z.number(),proof_available_time:z.number(),prev_publish_time:z.number()}),ne=z.object({price:z.string(),conf:z.string(),expo:z.number(),publish_time:z.number()}),Ce=z.object({id:z.string(),price:ne,ema_price:ne,metadata:ye.optional()}),Oe=z.object({encoding:z.string(),data:z.array(z.string())}),Le=z.object({text:z.string(),priceIds:z.array(z.string().regex(/^0x[0-9a-fA-F]{64}$/)),options:De.optional(),success:z.boolean().optional(),data:z.object({streamId:z.string(),status:z.enum(["connected","disconnected","error"]),binary:Oe.optional(),parsed:z.array(Ce).optional(),error:z.string().optional()}).optional()});async function ae(r){try{let e=await Le.parseAsync(r);return elizaLogger.debug("Price update stream validation passed",{result:e}),!0}catch(e){throw elizaLogger.error("Price update stream validation failed",{error:e}),new o("DATA_VALIDATION_FAILED","Price update stream validation failed","HIGH",{error:e})}}var se=D(),He=se.PYTH_GRANULAR_LOG,M=Number(se.PYTH_MAX_PRICE_STREAMS),U=new Map,S=(r,e)=>{He&&(elizaLogger.info(`[PriceUpdatesStream] ${r}`,e),console.log(`[PriceUpdatesStream] ${r}`,e?JSON.stringify(e,null,2):""));};function ie(r){let e=[],i=r.match(/(?:BTC|ETH|SOL)\/USD/g);if(i){let a={"BTC/USD":"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43","ETH/USD":"0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace","SOL/USD":"0xef0d8b6fda2ceba41da15d4095d1da392a0d2f8ed0c6c7bc0f4cfac8c280b56d"};e=i.map(t=>a[t]).filter(t=>t);}if(e.length===0){let a=r.match(/0x[0-9a-fA-F]{64}/g);if(a)e=a;else {let t=r.match(/[0-9a-fA-F]{64}/g);t&&(e=t.map(s=>`0x${s}`));}}return e}function xe(r){return {binary:r.binary,parsed:r.parsed.map(e=>({id:e.id,price:{price:e.price.price,conf:e.price.conf,expo:e.price.expo,publish_time:e.price.publish_time},ema_price:{price:e.ema_price.price,conf:e.ema_price.conf,expo:e.ema_price.expo,publish_time:e.ema_price.publish_time},metadata:e.metadata?{slot:e.metadata.slot,proof_available_time:e.metadata.proof_available_time,prev_publish_time:e.metadata.prev_publish_time}:void 0}))}}function ve(r,e,i){return `Price Update Stream (ID: stream_${r}, Update ${e}/${M}):
${i.parsed.map(a=>`Price Feed: ${a.id}
Current Price: ${(Number(a.price.price)*Math.pow(10,a.price.expo)).toFixed(2)} USD
Confidence: \xB1${(Number(a.price.conf)*Math.pow(10,a.price.expo)).toFixed(2)} USD
EMA Price: ${(Number(a.ema_price.price)*Math.pow(10,a.ema_price.expo)).toFixed(2)} USD
EMA Confidence: \xB1${(Number(a.ema_price.conf)*Math.pow(10,a.ema_price.expo)).toFixed(2)} USD
Last Update: ${new Date(a.price.publish_time*1e3).toLocaleString()}${a.metadata?`
Slot: ${a.metadata.slot}
Proof Available: ${new Date(a.metadata.proof_available_time*1e3).toLocaleString()}`:""}`).join(`

`)}`}async function Ue(r,e){return new Promise((i,a)=>{let t=0,s={binary:{encoding:"hex",data:[]},parsed:[]};r.onmessage=n=>{t++,S("Received price update",{streamId:e,messageCount:t,data:n.data});try{let c=JSON.parse(n.data);s.binary.data.push(...c.binary.data),s.parsed.push(...c.parsed),t>=M&&(r.close(),i(s));}catch(c){r.close(),a(c);}},r.onerror=n=>{r.close(),a(n);};})}async function Me(r,e,i){let a=await N(r);if(!a)throw new o("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");let t=O(a.PYTH_NETWORK_ENV),s=new HermesClient(t.hermes),n=`stream_${Date.now()}`;S("Creating price stream for IDs:",{streamId:n,priceIds:e});try{let c=await s.getPriceUpdatesStream(e,{parsed:!0,encoding:"hex"});U.set(n,c);try{let p=await Ue(c,n),I=xe(p),A=ve(n,M,p);i&&i({text:A,success:!0,priceIds:e,data:{streamId:n,status:"connected",...I}}),U.delete(n),S("Stream completed successfully",{streamId:n});}catch(p){throw S("Error collecting stream data",{streamId:n,error:p}),i&&i({text:`Error processing price updates: ${p instanceof Error?p.message:String(p)}`,success:!1,priceIds:e,data:{streamId:n,status:"error",error:p instanceof Error?p.message:String(p)}}),U.delete(n),p}}catch(c){throw S("Error creating price stream",{streamId:n,error:c}),new o("DATA_TRANSFORM_ERROR",c instanceof Error?c.message:String(c),"HIGH")}}var Ge={name:"GET_PRICE_UPDATES_STREAM",similes:["STREAM_PRICE_UPDATES","SUBSCRIBE_TO_PRICES","WATCH_PRICE_FEED"],description:"Create a streaming connection for real-time price updates from Pyth Network",examples:[[{user:"user",content:{text:"Stream BTC/USD price updates",priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"],options:{encoding:"hex",parsed:true,benchmarksOnly:true}}},{user:"assistant",content:{text:"Starting BTC/USD price stream...",success:true,priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"],data:{streamId:"stream_1",status:"connected",updates:[{id:"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",price:42e3,confidence:100,timestamp:1641034800,emaPrice:41950}]}}}],[{user:"user",content:{text:"Stream ETH and BTC prices with benchmarks only",priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43","0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace"],options:{benchmarksOnly:true,parsed:true}}},{user:"assistant",content:{text:"Starting price stream for BTC and ETH...",success:true,priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43","0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace"],data:{streamId:"stream_2",status:"connected",updates:[{id:"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",price:42e3,confidence:100,timestamp:1641034800,emaPrice:41950},{id:"0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace",price:2500,confidence:50,timestamp:1641034800,emaPrice:2495}]}}}]],validate:async(r,e)=>{var i,a;if(((i=e.content)==null?void 0:i.type)!=="GET_PRICE_UPDATES_STREAM")return  true;S("Starting validation",{content:e.content});try{let t=e.content;if(!t.priceIds){let n=ie(t.text);n.length>0&&(t={...t,priceIds:n,options:{parsed:!0,encoding:"hex"}},e.content=t);}try{await ae(t),S("Schema validation passed");}catch(n){throw S("Schema validation failed",{error:n}),n instanceof o?(elizaLogger.error("Schema validation failed",{errors:(a=n.details)==null?void 0:a.errors}),n):new o("DATA_VALIDATION_FAILED","Schema validation failed","HIGH",{error:n})}if(!await N(r))throw new o("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");if(!t.priceIds||!Array.isArray(t.priceIds))throw o.validationFailed(t,["priceIds must be an array of strings"]);if(t.priceIds.length===0)throw o.validationFailed(t,["priceIds array cannot be empty"]);if(t.priceIds.forEach((n,c)=>{if(!/^0x[0-9a-fA-F]{64}$/.test(n))throw o.validationFailed(t,[`Invalid price ID at index ${c}: ${n}`])}),t.options){let{encoding:n,parsed:c,allowUnordered:p,benchmarksOnly:I}=t.options;if(n&&!["hex","base64"].includes(n))throw o.validationFailed(t,["encoding must be either 'hex' or 'base64'"]);if(c!==void 0&&typeof c!="boolean")throw o.validationFailed(t,["parsed must be a boolean"]);if(p!==void 0&&typeof p!="boolean")throw o.validationFailed(t,["allowUnordered must be a boolean"]);if(I!==void 0&&typeof I!="boolean")throw o.validationFailed(t,["benchmarksOnly must be a boolean"])}return S("GET_PRICE_UPDATES_STREAM validation successful",{priceIds:t.priceIds,options:t.options}),!0}catch(t){throw S("Validation failed",{error:t}),t}},async handler(r,e,i,a={},t){S("Starting handler execution",{messageId:e.id,messageContent:e.content});try{let s=e.content,n=s.priceIds;if(!n&&(n=ie(s.text),n.length===0))throw new o("DATA_VALIDATION_FAILED","Could not extract any valid price IDs from message","HIGH");return await Me(r,n,t),!0}catch(s){throw S("Error in price updates stream handler",s),new o("DATA_TRANSFORM_ERROR",s instanceof Error?s.message:String(s),"HIGH")}}},ce=Ge;var Ye=new Fe({allErrors:true,verbose:true,coerceTypes:true,useDefaults:true}),ke={type:"object",required:["priceIds"],properties:{text:{type:"string"},priceIds:{type:"array",items:{type:"string",pattern:"^(0x)?[0-9a-fA-F]+$"},minItems:1,description:"Array of price feed IDs to fetch updates for"},options:{type:"object",properties:{encoding:{type:"string",enum:["hex","base64"],description:"Encoding format for the price updates"},parsed:{type:"boolean",description:"Whether to return parsed price updates"}}}}};async function de(r){try{let e=Ye.compile(ke);if(!e(r)){let a=e.errors||[];throw elizaLogger.error("Price updates validation failed",{errors:a,data:r}),new o("DATA_VALIDATION_FAILED","Price updates validation failed","HIGH",{errors:a.map(t=>({path:t.schemaPath,message:t.message,params:t.params})),data:r})}return !0}catch(e){throw e instanceof o?e:(elizaLogger.error("Price updates validation error",{error:e instanceof Error?e.message:String(e),data:r}),new o("DATA_SCHEMA_ERROR","Price updates validation error","HIGH",{error:e instanceof Error?e.message:String(e),data:r}))}}var We=D(),$e=We.PYTH_GRANULAR_LOG,R=(r,e)=>{$e&&(elizaLogger.info(`[PriceUpdates] ${r}`,e),console.log(`[PriceUpdates] ${r}`,e?JSON.stringify(e,null,2):""));},x=r=>r.toLowerCase().startsWith("0x")?r.toLowerCase():`0x${r.toLowerCase()}`,le=r=>r.toLowerCase().startsWith("0x")?r.toLowerCase():`0x${r.toLowerCase()}`,Be={name:"GET_LATEST_PRICE_UPDATES",similes:["FETCH_LATEST_PRICES","GET_CURRENT_PRICES","CHECK_PRICE_FEED"],description:"Retrieve latest price updates from Pyth Network",examples:[[{user:"user",content:{text:"Get latest price updates for 0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"],options:{encoding:"base64",parsed:true}}},{user:"assistant",content:{text:"Here is the latest BTC/USD price",success:true,priceIds:["0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43"],data:{updates:[{price_feed_id:"0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43",price:42e9,conf:1e8,expo:-8,publish_time:1641034800,ema_price:{price:4195e7,conf:95e6,expo:-8}}]}}}]],validate:async(r,e)=>{var i,a;if(((i=e.content)==null?void 0:i.type)!=="GET_LATEST_PRICE_UPDATES")return  true;R("Validating GET_LATEST_PRICE_UPDATES action",{content:e.content});try{let t=e.content;if(!t.priceIds&&t.text){let s=t.text.match(/([a-fA-F0-9]{64})/);s&&(t.priceIds=[le(s[1])]);}t.priceIds&&(t.priceIds=t.priceIds.map(x));try{await de(t),R("Schema validation passed");}catch(s){throw R("Schema validation failed",{error:s}),s instanceof o?(elizaLogger.error("Schema validation failed",{errors:(a=s.details)==null?void 0:a.errors}),s):new o("DATA_VALIDATION_FAILED","Schema validation failed","HIGH",{error:s})}if(!t.priceIds||!Array.isArray(t.priceIds))throw new o("DATA_VALIDATION_FAILED","priceIds must be an array of strings","HIGH");if(t.priceIds.length===0)throw new o("DATA_VALIDATION_FAILED","priceIds array cannot be empty","HIGH");if(t.priceIds.forEach((s,n)=>{let c=s.startsWith("0x")?s.slice(2):s;if(!/^[0-9a-fA-F]{64}$/.test(c))throw new o("DATA_VALIDATION_FAILED",`Invalid price ID at index ${n}: ${s}. Must be a 64-character hex string`,"HIGH")}),t.options&&t.options.encoding&&!["hex","base64"].includes(t.options.encoding))throw new o("DATA_VALIDATION_FAILED","Invalid encoding option. Must be 'hex' or 'base64'","HIGH");return !0}catch(t){return R("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_LATEST_PRICE_UPDATES",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(r,e,i,a={},t)=>{var s,n,c;R("Executing GET_LATEST_PRICE_UPDATES action");try{let p=e.content;if(R("Message content received",p),!p.priceIds&&p.text){let l=p.text.match(/([a-fA-F0-9]{64})/);l&&(p.priceIds=[le(l[1])]);}p.priceIds&&(p.priceIds=p.priceIds.map(x));let{priceIds:I,options:A={}}=p;R("Extracted values",{priceIds:I,options:A});let b=await N(r);if(!b)throw new o("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");let T=O(b.PYTH_NETWORK_ENV),y=new HermesClient(T.hermes);R("Initialized HermesClient",{endpoint:T.hermes});try{R("Requesting price updates with params",{priceIds:I,options:A});let l=await y.getLatestPriceUpdates(I,{parsed:!0,encoding:A==null?void 0:A.encoding});if(R("Raw response from Hermes",{updates:l}),!l||!l.parsed)throw new Error("No updates received from Hermes");if(R("Successfully retrieved price updates",{updates:l,parsedCount:(s=l.parsed)==null?void 0:s.length}),t){let _=(n=l.parsed)==null?void 0:n.map(u=>{let C=u.metadata,L=C==null?void 0:C.proof_available_time;return `Price Feed: ${x(u.id)}
Current Price: ${(Number(u.price.price)*Math.pow(10,u.price.expo)).toFixed(2)} USD
Confidence: \xB1${(Number(u.price.conf)*Math.pow(10,u.price.expo)).toFixed(2)} USD
EMA Price: ${(Number(u.ema_price.price)*Math.pow(10,u.ema_price.expo)).toFixed(2)} USD
EMA Confidence: \xB1${(Number(u.ema_price.conf)*Math.pow(10,u.ema_price.expo)).toFixed(2)} USD
Last Update: ${new Date(u.price.publish_time*1e3).toLocaleString()}${C?`
Slot: ${C.slot}
Proof Available: ${L?new Date(L*1e3).toLocaleString():"Not available"}`:""}`}).join(`

`);t({text:_,success:!0,priceIds:I,data:{updates:(c=l.parsed)==null?void 0:c.map(u=>({price_feed_id:x(u.id),price:Number(u.price.price),conf:Number(u.price.conf),expo:u.price.expo,publish_time:u.price.publish_time,ema_price:u.ema_price?{price:Number(u.ema_price.price),conf:Number(u.ema_price.conf),expo:u.ema_price.expo}:void 0,metadata:u.metadata}))}});}return !0}catch(l){throw R("Failed to process price updates request",{error:l}),t&&t({text:`Error retrieving price updates: ${l instanceof Error?l.message:String(l)}`,success:!1,priceIds:I,data:{error:l instanceof Error?l.message:String(l)}}),new o("DATA_VALIDATION_FAILED","Failed to process price updates request","HIGH",{originalError:l})}}catch(p){throw R("Failed to get latest price updates",{error:p}),new o("NETWORK_ERROR","Failed to get latest price updates","HIGH",{originalError:p})}}},Ee=Be;var qe=new Fe({allErrors:true,verbose:true,coerceTypes:true,useDefaults:true}),je={type:"object",properties:{text:{type:"string"},success:{type:"boolean"},data:{type:"object",properties:{caps:{type:"array",items:{type:"object",required:["publisher","cap","timestamp"],properties:{publisher:{type:"string",pattern:"^0x[a-fA-F0-9]{40}$"},cap:{type:"number",minimum:0},timestamp:{type:"number",minimum:0}}}},error:{type:"string"}}}}};async function me(r){try{let e=qe.compile(je);if(!e(r)){let a=e.errors||[];throw elizaLogger.error("Publisher caps validation failed",{errors:a,data:r}),new o("DATA_VALIDATION_FAILED","Publisher caps validation failed","HIGH",{errors:a.map(t=>({path:t.schemaPath,message:t.message,params:t.params})),data:r})}return !0}catch(e){throw e instanceof o?e:(elizaLogger.error("Publisher caps validation error",{error:e instanceof Error?e.message:String(e),data:r}),new o("DATA_SCHEMA_ERROR","Publisher caps validation error","HIGH",{error:e instanceof Error?e.message:String(e),data:r}))}}var ze=D(),Je=ze.PYTH_GRANULAR_LOG,h=(r,e)=>{Je&&(elizaLogger.info(`[PublisherCaps] ${r}`,e),console.log(`[PublisherCaps] ${r}`,e?JSON.stringify(e,null,2):""));},Qe={name:"GET_LATEST_PUBLISHER_CAPS",similes:["FETCH_PUBLISHER_CAPS","GET_PUBLISHER_LIMITS","CHECK_PUBLISHER_CAPS"],description:"Retrieve latest publisher caps from Pyth Network",examples:[[{user:"user",content:{text:"Get me all the latest publisher caps"}},{user:"assistant",content:{text:"Latest publisher caps",success:true,data:{caps:[{publisher:"0x1234567890abcdef1234567890abcdef12345678",cap:1e6,timestamp:1641034800}]}}}]],validate:async(r,e)=>{var i,a;if(((i=e.content)==null?void 0:i.type)!=="GET_LATEST_PUBLISHER_CAPS")return  true;h("Validating GET_LATEST_PUBLISHER_CAPS action",{content:e.content});try{let t=e.content;try{await me(t),h("Publisher caps validation passed");}catch(s){throw h("Publisher caps validation failed",{error:s}),s instanceof o?(elizaLogger.error("Publisher caps validation failed",{errors:(a=s.details)==null?void 0:a.errors}),s):new o("DATA_VALIDATION_FAILED","Publisher caps validation failed","HIGH",{error:s})}return !0}catch(t){return h("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_LATEST_PUBLISHER_CAPS",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(r,e,i,a={},t)=>{var s,n;h("Executing GET_LATEST_PUBLISHER_CAPS action");try{let c=await N(r);if(!c)throw new o("DATA_VALIDATION_FAILED","Invalid Pyth configuration","HIGH");let p=O(c.PYTH_NETWORK_ENV),I=new HermesClient(p.hermes);h("Initialized HermesClient",{endpoint:p.hermes});try{let A=await I.getLatestPublisherCaps({parsed:!0});if(!((n=(s=A.parsed)==null?void 0:s[0])!=null&&n.publisher_stake_caps))throw new o("DATA_VALIDATION_FAILED","No publisher caps data found in response","HIGH");let b=A.parsed[0].publisher_stake_caps,T=Date.now();b.forEach((l,_)=>{h(`Publisher Cap ${_+1}`,{publisher:l.publisher,cap:l.cap.toLocaleString(),timestamp:new Date(T).toLocaleString()});}),h("Successfully retrieved publisher caps",{totalCaps:b.length,allCaps:b.map(l=>({publisher:l.publisher,cap:l.cap.toLocaleString(),timestamp:new Date(T).toLocaleString()}))});let y=b.map((l,_)=>`Publisher ${_+1}:
ID: ${l.publisher}
Cap: ${l.cap.toLocaleString()} tokens
Timestamp: ${new Date(T).toLocaleString()}`).join(`

`);return t&&await t({text:`Retrieved ${b.length} publisher caps:

${y}`,success:!0,data:{caps:b.map(l=>({publisher:l.publisher,cap:l.cap,timestamp:T}))}}),!0}catch(A){throw h("Failed to process publisher caps request",{error:A}),A instanceof o?A:new o("DATA_VALIDATION_FAILED","Failed to process publisher caps request","HIGH",{originalError:A})}}catch(c){throw h("Failed to get publisher caps",{error:c}),c instanceof o?c:new o("NETWORK_ERROR","Failed to get publisher caps","HIGH",{originalError:c})}}},ue=Qe;var et=Ze({text:d.cyan("Initializing Pyth Data Plugin..."),spinner:"dots12",color:"cyan"}).start();await new Promise(r=>setTimeout(r,1e3));var Y=[te,ce,Ee,ue];console.log(`
`+d.cyan("\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510"));console.log(d.cyan("\u2502")+d.yellow.bold("          PYTH DATA PLUGIN             ")+d.cyan(" \u2502"));console.log(d.cyan("\u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524"));console.log(d.cyan("\u2502")+d.white("  Initializing Pyth Data Services...    ")+d.cyan("\u2502"));console.log(d.cyan("\u2502")+d.white("  Version: 1.0.0                        ")+d.cyan("\u2502"));console.log(d.cyan("\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"));et.succeed(d.green("Pyth Data Plugin initialized successfully!"));var Te=new fe({head:[d.cyan("Action"),d.cyan("H"),d.cyan("V"),d.cyan("E"),d.cyan("Similes")],style:{head:[],border:["cyan"]}});Y.forEach(r=>{var e,i;Te.push([d.white(r.name),typeof r.handler=="function"?d.green("\u2713"):d.red("\u2717"),typeof r.validate=="function"?d.green("\u2713"):d.red("\u2717"),((e=r.examples)==null?void 0:e.length)>0?d.green("\u2713"):d.red("\u2717"),d.gray(((i=r.similes)==null?void 0:i.join(", "))||"none")]);});console.log(`
`+Te.toString());var Ae=new fe({style:{border:["cyan"]}});Ae.push([d.cyan("Plugin Status")],[d.white("Name    : ")+d.yellow("pyth-data")],[d.white("Actions : ")+d.green(Y.length.toString())],[d.white("Status  : ")+d.green("Loaded & Ready")]);console.log(`
`+Ae.toString()+`
`);var tt={name:"pyth-data",description:"Pyth Data Plugin for price feeds and market data",actions:Y,evaluators:[]};var or=tt;export{or as default,tt as pythDataPlugin};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map